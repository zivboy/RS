<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.business.mapper.ItemMapper">
    <resultMap id="BaseResultMap" type="com.ssm.business.entity.Item">
        <id column="item_id" jdbcType="INTEGER" property="itemId"/>
        <result column="model_id" jdbcType="INTEGER" property="modelId"/>
        <result column="source_tabel" jdbcType="VARCHAR" property="sourceTabel"/>
        <result column="source_field" jdbcType="VARCHAR" property="sourceField"/>
        <result column="target_table" jdbcType="VARCHAR" property="targetTable"/>
        <result column="target_field" jdbcType="VARCHAR" property="targetField"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    item_id, model_id, source_tabel, source_field, target_table, target_field, state
  </sql>
    <select id="selectByExample" parameterType="com.ssm.business.entity.ItemCriteria" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from business_model_item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from business_model_item
        where item_id = #{itemId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from business_model_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByModelId" parameterType="java.lang.Integer">
        delete from business_model_item
        where model_id = #{itemId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ssm.business.entity.ItemCriteria">
        delete from business_model_item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into business_model_item (model_id, source_tabel,
        source_field, target_table, target_field,
        state)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.modelId,jdbcType=INTEGER}, #{item.sourceTabel,jdbcType=VARCHAR},
            #{item.sourceField,jdbcType=VARCHAR}, #{item.targetTable,jdbcType=VARCHAR}, #{item.targetField,jdbcType=VARCHAR},
            #{item.state,jdbcType=INTEGER})
        </foreach>
    </insert>

    <insert id="insert" parameterType="com.ssm.business.entity.Item">
    insert into business_model_item (item_id, model_id, source_tabel, 
      source_field, target_table, target_field, 
      state)
    values (#{itemId,jdbcType=INTEGER}, #{modelId,jdbcType=INTEGER}, #{sourceTabel,jdbcType=VARCHAR}, 
      #{sourceField,jdbcType=VARCHAR}, #{targetTable,jdbcType=VARCHAR}, #{targetField,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.ssm.business.entity.Item">
        insert into business_model_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="itemId != null">
                item_id,
            </if>
            <if test="modelId != null">
                model_id,
            </if>
            <if test="sourceTabel != null">
                source_tabel,
            </if>
            <if test="sourceField != null">
                source_field,
            </if>
            <if test="targetTable != null">
                target_table,
            </if>
            <if test="targetField != null">
                target_field,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="itemId != null">
                #{itemId,jdbcType=INTEGER},
            </if>
            <if test="modelId != null">
                #{modelId,jdbcType=INTEGER},
            </if>
            <if test="sourceTabel != null">
                #{sourceTabel,jdbcType=VARCHAR},
            </if>
            <if test="sourceField != null">
                #{sourceField,jdbcType=VARCHAR},
            </if>
            <if test="targetTable != null">
                #{targetTable,jdbcType=VARCHAR},
            </if>
            <if test="targetField != null">
                #{targetField,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ssm.business.entity.ItemCriteria" resultType="java.lang.Integer">
        select count(*) from business_model_item
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update business_model_item
        <set>
            <if test="record.itemId != null">
                item_id = #{record.itemId,jdbcType=INTEGER},
            </if>
            <if test="record.modelId != null">
                model_id = #{record.modelId,jdbcType=INTEGER},
            </if>
            <if test="record.sourceTabel != null">
                source_tabel = #{record.sourceTabel,jdbcType=VARCHAR},
            </if>
            <if test="record.sourceField != null">
                source_field = #{record.sourceField,jdbcType=VARCHAR},
            </if>
            <if test="record.targetTable != null">
                target_table = #{record.targetTable,jdbcType=VARCHAR},
            </if>
            <if test="record.targetField != null">
                target_field = #{record.targetField,jdbcType=VARCHAR},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update business_model_item
        set item_id = #{record.itemId,jdbcType=INTEGER},
        model_id = #{record.modelId,jdbcType=INTEGER},
        source_tabel = #{record.sourceTabel,jdbcType=VARCHAR},
        source_field = #{record.sourceField,jdbcType=VARCHAR},
        target_table = #{record.targetTable,jdbcType=VARCHAR},
        target_field = #{record.targetField,jdbcType=VARCHAR},
        state = #{record.state,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssm.business.entity.Item">
        update business_model_item
        <set>
            <if test="modelId != null">
                model_id = #{modelId,jdbcType=INTEGER},
            </if>
            <if test="sourceTabel != null">
                source_tabel = #{sourceTabel,jdbcType=VARCHAR},
            </if>
            <if test="sourceField != null">
                source_field = #{sourceField,jdbcType=VARCHAR},
            </if>
            <if test="targetTable != null">
                target_table = #{targetTable,jdbcType=VARCHAR},
            </if>
            <if test="targetField != null">
                target_field = #{targetField,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where item_id = #{itemId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssm.business.entity.Item">
    update business_model_item
    set model_id = #{modelId,jdbcType=INTEGER},
      source_tabel = #{sourceTabel,jdbcType=VARCHAR},
      source_field = #{sourceField,jdbcType=VARCHAR},
      target_table = #{targetTable,jdbcType=VARCHAR},
      target_field = #{targetField,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>
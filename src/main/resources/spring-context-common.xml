<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd">


    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" >
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>

    <util:properties id="APP_PROPERTIES" location="classpath:jdbc.properties" local-override="true"/>

    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
        <!-- 指定配置装载的目录  -->
        <property name="dir" value="META-INF/druid/wall/${jdbc.database}" />
        <property name="deleteWhereAlwayTrueCheck" value="false"/>
        <property name="updateWhereAlayTrueCheck" value="false"/>
        <property name="objectCheck" value="false"/>
        <property name="variantCheck" value="false"/>
        <property name="functionCheck" value="false"/>
        <property name="commentAllow" value="true"/>
        <property name="multiStatementAllow" value="true"/>
        <property name="truncateAllow" value="false"/>
        <property name="selectUnionCheck" value="false"/>
        <property name="alterTableAllow" value="false"/>
        <property name="noneBaseStatementAllow" value="true"/>
        <property name="schemaCheck" value="false"/>
        <property name="dropTableAllow" value="false"/>
    </bean>

    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="${jdbc.database}" />
        <property name="config" ref="wall-filter-config" />
    </bean>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="10000" />
        <property name="logSlowSql" value="true" />
    </bean>

    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="6000" />

        <!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!--  防御SQL注入攻击 监控数据库-->
        <!-- <property name="filters" value="mergeStat"  /> -->
        <property name="filters" value="wall,stat,log4j" />
        <property name="connectionProperties" value="druid.stat.mergeSql=true" />

        <!--是的DruidDataSource无法正确识别数据库的类型 -->
        <property name="proxyFilters">
            <list>
                <ref bean="wall-filter"/>
                <ref bean="stat-filter"/>
            </list>
        </property>

    </bean>


    <!-- mybatis会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml" />
    </bean>

    <!--扫描mapper -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ssm.mapper,com.ssm.business.mapper,com.ssm.generator.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> <!--
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>-->
    </bean>

    <!-- 单SESSION 多数据源 -->
    <bean id="baseDao" class="com.ssm.common.basedao.BaseDaoSingleSession">
        <property name="sqlSessionFactory">
            <ref bean="sqlSessionFactory" />
        </property>
        <property name="batchSize" value="20" />
    </bean>

    <!-- 启用Aop AspectJ注解 -->
    <aop:aspectj-autoproxy/>

</beans>